generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TipoUsuario {
  Professor
  Aluno
}

enum StatusSolicitacao {
  PENDENTE
  APROVADA
  RECUSADA
}

model Usuario {
  id    String      @id @default(cuid())
  nome  String
  email String      @unique
  senha String
  tipo  TipoUsuario

  reservas              Reserva[]
  solicitacoesCriadas   Solicitacao[] @relation("SolicitacoesCriadas")
  solicitacoesAprovadas Solicitacao[] @relation("SolicitacoesAprovadas")
}

model Sala {
  id         String  @id @default(cuid())
  nome       String
  capacidade Int
  imagem     String?

  reservas     Reserva[]
  solicitacoes Solicitacao[]
  horariosSala HorarioSala[]
}

model Reserva {
  id        String   @id @default(cuid())
  usuarioId String
  salaId    String
  criadoEm  DateTime @default(now())

  usuario            Usuario            @relation(fields: [usuarioId], references: [id])
  sala               Sala               @relation(fields: [salaId], references: [id])
  horariosReservados HorarioReservado[]
}

model Solicitacao {
  id          String            @id @default(cuid())
  usuarioId   String
  salaId      String
  criadoEm    DateTime          @default(now())
  motivo      String
  aprovadorId String?
  status      StatusSolicitacao @default(PENDENTE)

  usuario             Usuario             @relation("SolicitacoesCriadas", fields: [usuarioId], references: [id])
  aprovador           Usuario?            @relation("SolicitacoesAprovadas", fields: [aprovadorId], references: [id])
  sala                Sala                @relation(fields: [salaId], references: [id])
  horariosSolicitados HorarioSolicitado[]
}

model Horario {
  id     String @id @default(cuid())
  inicio String
  fim    String

  horariosSala HorarioSala[]
}

model HorarioSala {
  id        String @id @default(cuid())
  salaId    String
  horarioId String

  sala                Sala                @relation(fields: [salaId], references: [id])
  horario             Horario             @relation(fields: [horarioId], references: [id])
  horariosSolicitados HorarioSolicitado[]
  horariosReservados  HorarioReservado[]
}

model HorarioSolicitado {
  id            String   @id @default(cuid())
  solicitacaoId String
  horarioSalaId String
  criadoEm      DateTime @default(now())

  solicitacao Solicitacao @relation(fields: [solicitacaoId], references: [id])
  horarioSala HorarioSala @relation(fields: [horarioSalaId], references: [id])
}

model HorarioReservado {
  id            String   @id @default(cuid())
  reservaId     String
  horarioSalaId String
  criadoEm      DateTime @default(now())

  reserva     Reserva     @relation(fields: [reservaId], references: [id])
  horarioSala HorarioSala @relation(fields: [horarioSalaId], references: [id])
}
